// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuadrosNBR.Infraestrutura.DataBase.Context;

#nullable disable

namespace QuadrosNBR.Infraestrutura.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuadrosNBR.Dominio.Entities.InformacoesPreliminaresDominio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("ARTdoResponsavelTecnico")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("ARTdoResponsavelTecnico");

                    b.Property<decimal>("AreaDoLote")
                        .HasColumnType("numeric(8, 2)")
                        .HasColumnName("AreaDoLote");

                    b.Property<string>("CNPJdoIncorporador")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CNPJdoIncorporador");

                    b.Property<string>("CREAdoResponsavelTecnico")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CREAdoResponsavelTecnico");

                    b.Property<string>("CidadeDoImovel")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("CidadeDoImovel");

                    b.Property<DateTime>("DataDeAprovacaoDoProjeto")
                        .HasColumnType("date")
                        .HasColumnName("DataDeAprovacaoDoProjeto");

                    b.Property<string>("DesignacaoDoImovel")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("DesignacaoDoImovel");

                    b.Property<string>("EnderecoDoImovel")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("EnderecoDoImovel");

                    b.Property<string>("EnderecoDoIncorporador")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("EnderecoDoIncorporador");

                    b.Property<string>("EnderecoDoResponsavelTecnico")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("EnderecoDoResponsavelTecnico");

                    b.Property<string>("NomeDoImovel")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("NomeDoImovel");

                    b.Property<string>("NomeDoIncorporador")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("NomeDoIncorporador");

                    b.Property<string>("NomeDoResponsavelTecnico")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("NomeDoResponsavelTecnico");

                    b.Property<byte>("NumeroDePavimentosDoImovel")
                        .HasColumnType("tinyint")
                        .HasColumnName("NumeroDePavimentosDoImovel");

                    b.Property<byte>("NumeroDeVagasDeAutomovelAcessorias")
                        .HasColumnType("tinyint")
                        .HasColumnName("NumeroDeVagasDeAutomovelAcessorias");

                    b.Property<byte>("NumeroDeVagasDeAutomovelAutonomas")
                        .HasColumnType("tinyint")
                        .HasColumnName("NumeroDeVagasDeAutomovelAutonomas");

                    b.Property<byte>("NumeroDeVagasDeAutomovelComum")
                        .HasColumnType("tinyint")
                        .HasColumnName("NumeroDeVagasDeAutomovelComum");

                    b.Property<string>("NumeroDoAlvara")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("NumeroDoAlvara");

                    b.Property<string>("PadraoDeAcabamentoDoImovel")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("PadraoDeAcabamentoDoImovel");

                    b.Property<Guid>("ProjetoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProjetoId");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<string>("UFdoImovel")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("UFdoImovel");

                    b.Property<byte>("UnidadesAutonomasDoImovel")
                        .HasColumnType("tinyint")
                        .HasColumnName("UnidadesAutonomasDoImovel");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProjetoId" }, "IX_InformacoesPreliminares_ProjetoId");

                    b.HasIndex(new[] { "TenantId" }, "IX_InformacoesPreliminares_TenantId");

                    b.ToTable("InformacoesPreliminares", (string)null);
                });

            modelBuilder.Entity("QuadrosNBR.Dominio.Entities.MemoriaDominio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<double>("Area")
                        .HasColumnType("FLOAT")
                        .HasColumnName("Area");

                    b.Property<double>("AreaDoTerreno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("FLOAT")
                        .HasDefaultValue(0.0)
                        .HasColumnName("AreaDoTerreno");

                    b.Property<double>("AreaEquivalenteDiferenteDaCobertaPadraoTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("FLOAT")
                        .HasDefaultValue(0.0)
                        .HasColumnName("AreaEquivalenteDiferenteDaCobertaPadraoTotal");

                    b.Property<double>("AreaEquivalenteDiferenteDaCobertaPadraoUnitaria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("FLOAT")
                        .HasDefaultValue(0.0)
                        .HasColumnName("AreaEquivalenteDiferenteDaCobertaPadraoUnitaria");

                    b.Property<double>("AreaRealCobertaPadraoTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("FLOAT")
                        .HasDefaultValue(0.0)
                        .HasColumnName("AreaRealCobertaPadraoTotal");

                    b.Property<double>("AreaRealDiferenteDaCobertaPadraoTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("FLOAT")
                        .HasDefaultValue(0.0)
                        .HasColumnName("AreaRealDiferenteDaCobertaPadraoTotal");

                    b.Property<double?>("Coeficiente")
                        .HasColumnType("FLOAT")
                        .HasColumnName("Coeficiente");

                    b.Property<bool?>("DecideAreaAcessoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(false)
                        .HasColumnName("DecideAreaAcessoria");

                    b.Property<bool?>("DecideAreaDoTerreno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(false)
                        .HasColumnName("DecideAreaDoTerreno");

                    b.Property<bool?>("DecideAreaPadrao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(false)
                        .HasColumnName("DecideAreaPadrao");

                    b.Property<bool?>("DecideAreaSubrogada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(false)
                        .HasColumnName("DecideAreaSubrogada");

                    b.Property<bool?>("DecideDivisaoProporcional")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasDefaultValue(false)
                        .HasColumnName("DecideDivisaoProporcional");

                    b.Property<string>("Dependencia")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Dependencia");

                    b.Property<string>("NomeDaLayer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("NomeDaLayer");

                    b.Property<string>("Observacao")
                        .HasColumnType("TEXT")
                        .HasColumnName("Observacao");

                    b.Property<byte?>("Ordenacao")
                        .HasColumnType("tinyint")
                        .HasColumnName("Ordenacao");

                    b.Property<string>("Pavimento")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Pavimento");

                    b.Property<Guid>("ProjetoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProjetoId");

                    b.Property<byte?>("Repeticao")
                        .HasColumnType("tinyint")
                        .HasColumnName("Repeticao");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<string>("Uso")
                        .HasMaxLength(9)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Uso");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DecideAreaAcessoria" }, "IX_Memoria_DecideAreaAcessoria");

                    b.HasIndex(new[] { "DecideAreaDoTerreno" }, "IX_Memoria_DecideAreaDoTerreno");

                    b.HasIndex(new[] { "DecideAreaSubrogada" }, "IX_Memoria_DecideAreaSubrogada");

                    b.HasIndex(new[] { "DecideDivisaoProporcional" }, "IX_Memoria_DecideDivisaoProporcional");

                    b.HasIndex(new[] { "Ordenacao" }, "IX_Memoria_Ordenacao");

                    b.HasIndex(new[] { "ProjetoId" }, "IX_Memoria_ProjetoId");

                    b.HasIndex(new[] { "TenantId" }, "IX_Memoria_TenantId");

                    b.HasIndex(new[] { "Uso" }, "IX_Memoria_Uso");

                    b.ToTable("Memoria", (string)null);
                });

            modelBuilder.Entity("QuadrosNBR.Dominio.Entities.PavimentoDominio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Descricao");

                    b.Property<byte>("Ordenacao")
                        .HasColumnType("tinyint")
                        .HasColumnName("Ordenacao");

                    b.Property<Guid>("ProjetoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProjetoId");

                    b.Property<byte>("Repeticao")
                        .HasColumnType("tinyint")
                        .HasColumnName("Repeticao");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Ordenacao" }, "IX_Pavimento_Ordenacao");

                    b.HasIndex(new[] { "ProjetoId" }, "IX_Pavimento_ProjetoId");

                    b.HasIndex(new[] { "TenantId" }, "IX_Pavimento_TenantId");

                    b.ToTable("Pavimento", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
